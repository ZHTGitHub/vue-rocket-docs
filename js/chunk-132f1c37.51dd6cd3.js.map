{"version":3,"sources":["webpack:///./examples/views/Components/FileInput/UsageExamples.vue?78a9","webpack:///examples/views/Components/FileInput/UsageExamples.vue","webpack:///./examples/views/Components/FileInput/UsageExamples.vue?db98","webpack:///./examples/views/Components/FileInput/UsageExamples.vue","webpack:///./node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","code","slot","path","name","url","on","onResponse","onRemove","staticRenderFns","component","Prism","document","PLUGIN_NAME","NEW_LINE_EXP","config","plugins","lineNumbers","getLine","element","number","tagName","classList","contains","lineNumberRows","querySelector","lineNumberStart","parseInt","getAttribute","lineNumberEnd","children","length","lineIndex","resize","resizeElements","assumeViewportIndependence","lastWidth","undefined","window","addEventListener","innerWidth","Array","prototype","slice","call","querySelectorAll","hooks","add","env","pre","test","nodeName","util","isActive","remove","lineNumbersWrapper","match","linesNum","lines","join","createElement","setAttribute","className","innerHTML","hasAttribute","style","counterReset","appendChild","run","elements","filter","e","codeStyles","getStyles","whiteSpace","infos","map","codeElement","lineNumberSizer","codeLines","textContent","split","display","oneLinerHeight","getBoundingClientRect","height","lineHeights","sizer","Boolean","forEach","info","line","index","childIndex","i","wrapper","lineNumber","getComputedStyle","currentStyle"],"mappings":"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","file":"js/chunk-132f1c37.51dd6cd3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"usage-examples\"},[_c('usage-demo',{attrs:{\"code\":_vm.code}},[_c('div',{attrs:{\"slot\":\"demo\"},slot:\"demo\"},[_c('z-file-input',{attrs:{\"formId\":\"files\",\"formKey\":\"file\",\"accept\":\"image/*, .xlsx\",\"chips\":\"\",\"clearable\":\"\",\"prependIcon\":\"mdi-file-excel-outline\",\"action\":\"http://113.106.108.93:1620/task/uploadImage\",\"effectData\":{ \n          path: 'B0118/download/2021/12-09/682021060032022/',\n          name: 'leslie.png'\n        },\"fileList\":[\n          {\n            url: '',\n            name: 'demo.png'\n          }\n        ],\"headers\":{ 'x-name': 'Leslie' },\"name\":\"file\",\"label\":\"文件上传\",\"parcel\":\"\",\"multiple\":true,\"deleteIcon\":false},on:{\"response\":_vm.onResponse,\"delete\":_vm.onRemove}})],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"usage-examples\">\r\n    <usage-demo :code=\"code\">\r\n      <div slot=\"demo\">\r\n        <z-file-input\r\n          formId=\"files\"\r\n          formKey=\"file\"\r\n          accept=\"image/*, .xlsx\"\r\n          chips\r\n          clearable\r\n          prependIcon=\"mdi-file-excel-outline\"\r\n          action=\"http://113.106.108.93:1620/task/uploadImage\"\r\n          :effectData=\"{ \r\n            path: 'B0118/download/2021/12-09/682021060032022/',\r\n            name: 'leslie.png'\r\n          }\"\r\n          :fileList=\"[\r\n            {\r\n              url: '',\r\n              name: 'demo.png'\r\n            }\r\n          ]\"\r\n          :headers=\"{ 'x-name': 'Leslie' }\"\r\n          name=\"file\"\r\n          label=\"文件上传\"\r\n          parcel\r\n          :multiple=\"true\"\r\n          :deleteIcon=\"false\"\r\n          @response=\"onResponse\"\r\n          @delete=\"onRemove\"\r\n        >\r\n        </z-file-input>\r\n      </div>\r\n    </usage-demo>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Prism from 'prismjs'\r\n  import 'prismjs/themes/prism-okaidia.css'\r\n  import 'prismjs/plugins/line-numbers/prism-line-numbers.css'\r\n  import 'prismjs/plugins/line-numbers/prism-line-numbers.js'\r\n\r\n  const code = \r\n`\r\n<z-file-input\r\n  formId=\"files\"\r\n  formKey=\"file\"\r\n  accept=\"image/*\"\r\n  prependIcon=\"mdi-file-excel-outline\"\r\n  action=\"http://zenghaitao/update-images\"\r\n  :effectData=\"{ \r\n    sysProTempId: '900709761157169152',\r\n    proCode: 2\r\n  }\"\r\n  :fileList=\"[\r\n    {\r\n      url: '',\r\n      name: 'demo.png'\r\n    }\r\n  ]\"\r\n  name=\"tempImages\"\r\n  label=\"文件上传\"\r\n  parcel\r\n  :multiple=\"false\"\r\n  :deleteIcon=\"false\"\r\n  @response=\"onResponse\"\r\n  @delete=\"onRemove\"\r\n>\r\n</z-file-input>\r\n`\r\n\r\n  export default {\r\n    name: 'UsageExamples',\r\n\r\n    data() {\r\n      return {\r\n        code\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      Prism.highlightAll()\r\n    },\r\n\r\n    methods: {\r\n      onResponse(result) {\r\n        console.log(result)\r\n      },\r\n\r\n      onRemove(event) {\r\n        console.log(event)\r\n      }\r\n    }\r\n  }\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UsageExamples.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UsageExamples.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UsageExamples.vue?vue&type=template&id=d9e9e942&\"\nimport script from \"./UsageExamples.vue?vue&type=script&lang=js&\"\nexport * from \"./UsageExamples.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t/**\n\t * Plugin name which is used as a class name for <pre> which is activating the plugin\n\t *\n\t * @type {string}\n\t */\n\tvar PLUGIN_NAME = 'line-numbers';\n\n\t/**\n\t * Regular expression used for determining line breaks\n\t *\n\t * @type {RegExp}\n\t */\n\tvar NEW_LINE_EXP = /\\n(?!$)/g;\n\n\n\t/**\n\t * Global exports\n\t */\n\tvar config = Prism.plugins.lineNumbers = {\n\t\t/**\n\t\t * Get node for provided line number\n\t\t *\n\t\t * @param {Element} element pre element\n\t\t * @param {number} number line number\n\t\t * @returns {Element|undefined}\n\t\t */\n\t\tgetLine: function (element, number) {\n\t\t\tif (element.tagName !== 'PRE' || !element.classList.contains(PLUGIN_NAME)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar lineNumberRows = element.querySelector('.line-numbers-rows');\n\t\t\tif (!lineNumberRows) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar lineNumberStart = parseInt(element.getAttribute('data-start'), 10) || 1;\n\t\t\tvar lineNumberEnd = lineNumberStart + (lineNumberRows.children.length - 1);\n\n\t\t\tif (number < lineNumberStart) {\n\t\t\t\tnumber = lineNumberStart;\n\t\t\t}\n\t\t\tif (number > lineNumberEnd) {\n\t\t\t\tnumber = lineNumberEnd;\n\t\t\t}\n\n\t\t\tvar lineIndex = number - lineNumberStart;\n\n\t\t\treturn lineNumberRows.children[lineIndex];\n\t\t},\n\n\t\t/**\n\t\t * Resizes the line numbers of the given element.\n\t\t *\n\t\t * This function will not add line numbers. It will only resize existing ones.\n\t\t *\n\t\t * @param {HTMLElement} element A `<pre>` element with line numbers.\n\t\t * @returns {void}\n\t\t */\n\t\tresize: function (element) {\n\t\t\tresizeElements([element]);\n\t\t},\n\n\t\t/**\n\t\t * Whether the plugin can assume that the units font sizes and margins are not depended on the size of\n\t\t * the current viewport.\n\t\t *\n\t\t * Setting this to `true` will allow the plugin to do certain optimizations for better performance.\n\t\t *\n\t\t * Set this to `false` if you use any of the following CSS units: `vh`, `vw`, `vmin`, `vmax`.\n\t\t *\n\t\t * @type {boolean}\n\t\t */\n\t\tassumeViewportIndependence: true\n\t};\n\n\t/**\n\t * Resizes the given elements.\n\t *\n\t * @param {HTMLElement[]} elements\n\t */\n\tfunction resizeElements(elements) {\n\t\telements = elements.filter(function (e) {\n\t\t\tvar codeStyles = getStyles(e);\n\t\t\tvar whiteSpace = codeStyles['white-space'];\n\t\t\treturn whiteSpace === 'pre-wrap' || whiteSpace === 'pre-line';\n\t\t});\n\n\t\tif (elements.length == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar infos = elements.map(function (element) {\n\t\t\tvar codeElement = element.querySelector('code');\n\t\t\tvar lineNumbersWrapper = element.querySelector('.line-numbers-rows');\n\t\t\tif (!codeElement || !lineNumbersWrapper) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\t/** @type {HTMLElement} */\n\t\t\tvar lineNumberSizer = element.querySelector('.line-numbers-sizer');\n\t\t\tvar codeLines = codeElement.textContent.split(NEW_LINE_EXP);\n\n\t\t\tif (!lineNumberSizer) {\n\t\t\t\tlineNumberSizer = document.createElement('span');\n\t\t\t\tlineNumberSizer.className = 'line-numbers-sizer';\n\n\t\t\t\tcodeElement.appendChild(lineNumberSizer);\n\t\t\t}\n\n\t\t\tlineNumberSizer.innerHTML = '0';\n\t\t\tlineNumberSizer.style.display = 'block';\n\n\t\t\tvar oneLinerHeight = lineNumberSizer.getBoundingClientRect().height;\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\treturn {\n\t\t\t\telement: element,\n\t\t\t\tlines: codeLines,\n\t\t\t\tlineHeights: [],\n\t\t\t\toneLinerHeight: oneLinerHeight,\n\t\t\t\tsizer: lineNumberSizer,\n\t\t\t};\n\t\t}).filter(Boolean);\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lines = info.lines;\n\t\t\tvar lineHeights = info.lineHeights;\n\t\t\tvar oneLinerHeight = info.oneLinerHeight;\n\n\t\t\tlineHeights[lines.length - 1] = undefined;\n\t\t\tlines.forEach(function (line, index) {\n\t\t\t\tif (line && line.length > 1) {\n\t\t\t\t\tvar e = lineNumberSizer.appendChild(document.createElement('span'));\n\t\t\t\t\te.style.display = 'block';\n\t\t\t\t\te.textContent = line;\n\t\t\t\t} else {\n\t\t\t\t\tlineHeights[index] = oneLinerHeight;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar lineHeights = info.lineHeights;\n\n\t\t\tvar childIndex = 0;\n\t\t\tfor (var i = 0; i < lineHeights.length; i++) {\n\t\t\t\tif (lineHeights[i] === undefined) {\n\t\t\t\t\tlineHeights[i] = lineNumberSizer.children[childIndex++].getBoundingClientRect().height;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tinfos.forEach(function (info) {\n\t\t\tvar lineNumberSizer = info.sizer;\n\t\t\tvar wrapper = info.element.querySelector('.line-numbers-rows');\n\n\t\t\tlineNumberSizer.style.display = 'none';\n\t\t\tlineNumberSizer.innerHTML = '';\n\n\t\t\tinfo.lineHeights.forEach(function (height, lineNumber) {\n\t\t\t\twrapper.children[lineNumber].style.height = height + 'px';\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Returns style declarations for the element\n\t *\n\t * @param {Element} element\n\t */\n\tfunction getStyles(element) {\n\t\tif (!element) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn window.getComputedStyle ? getComputedStyle(element) : (element.currentStyle || null);\n\t}\n\n\tvar lastWidth = undefined;\n\twindow.addEventListener('resize', function () {\n\t\tif (config.assumeViewportIndependence && lastWidth === window.innerWidth) {\n\t\t\treturn;\n\t\t}\n\t\tlastWidth = window.innerWidth;\n\n\t\tresizeElements(Array.prototype.slice.call(document.querySelectorAll('pre.' + PLUGIN_NAME)));\n\t});\n\n\tPrism.hooks.add('complete', function (env) {\n\t\tif (!env.code) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar code = /** @type {Element} */ (env.element);\n\t\tvar pre = /** @type {HTMLElement} */ (code.parentNode);\n\n\t\t// works only for <code> wrapped inside <pre> (not inline)\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if line numbers already exists\n\t\tif (code.querySelector('.line-numbers-rows')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// only add line numbers if <code> or one of its ancestors has the `line-numbers` class\n\t\tif (!Prism.util.isActive(code, PLUGIN_NAME)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove the class 'line-numbers' from the <code>\n\t\tcode.classList.remove(PLUGIN_NAME);\n\t\t// Add the class 'line-numbers' to the <pre>\n\t\tpre.classList.add(PLUGIN_NAME);\n\n\t\tvar match = env.code.match(NEW_LINE_EXP);\n\t\tvar linesNum = match ? match.length + 1 : 1;\n\t\tvar lineNumbersWrapper;\n\n\t\tvar lines = new Array(linesNum + 1).join('<span></span>');\n\n\t\tlineNumbersWrapper = document.createElement('span');\n\t\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\n\t\tlineNumbersWrapper.className = 'line-numbers-rows';\n\t\tlineNumbersWrapper.innerHTML = lines;\n\n\t\tif (pre.hasAttribute('data-start')) {\n\t\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\n\t\t}\n\n\t\tenv.element.appendChild(lineNumbersWrapper);\n\n\t\tresizeElements([pre]);\n\n\t\tPrism.hooks.run('line-numbers', env);\n\t});\n\n\tPrism.hooks.add('line-numbers', function (env) {\n\t\tenv.plugins = env.plugins || {};\n\t\tenv.plugins.lineNumbers = true;\n\t});\n\n}());\n"],"sourceRoot":""}